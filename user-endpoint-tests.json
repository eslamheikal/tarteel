{
  "description": "Test cases for User Endpoint API",
  "baseUrl": "http://localhost:3000/api/users",
  "headers": {
    "Content-Type": "application/json",
    "Authorization": "Bearer YOUR_TOKEN_HERE"
  },
  "testCases": {
    "createUser": {
      "method": "POST",
      "url": "{{baseUrl}}?action=create",
      "description": "Create a new user",
      "body": {
        "name": "Ahmed Mohamed",
        "email": "ahmed.mohamed@example.com",
        "phone": "+201234567890",
        "password": "SecurePassword123!",
        "role": 4,
        "isActive": true
      },
      "expectedResponse": {
        "success": true,
        "data": "User created successfully"
      }
    },
    "createMemberUser": {
      "method": "POST", 
      "url": "{{baseUrl}}?action=create",
      "description": "Create a member user (role will be set to Member if parent creates)",
      "body": {
        "name": "Sara Ahmed",
        "email": "sara.ahmed@example.com",
        "phone": "+201234567891",
        "password": "MemberPassword123!",
        "role": 3,
        "isActive": true
      },
      "expectedResponse": {
        "success": true,
        "data": "User created successfully"
      }
    },
    "createAdminUser": {
      "method": "POST",
      "url": "{{baseUrl}}?action=create", 
      "description": "Create an admin user",
      "body": {
        "name": "Admin User",
        "email": "admin@tarteel.com",
        "phone": "+201234567892",
        "password": "AdminPassword123!",
        "role": 1,
        "isActive": true
      },
      "expectedResponse": {
        "success": true,
        "data": "User created successfully"
      }
    },
    "updateUser": {
      "method": "PUT",
      "url": "{{baseUrl}}?action=update",
      "description": "Update an existing user",
      "body": {
        "id": 1,
        "name": "Ahmed Mohamed Updated",
        "email": "ahmed.mohamed.updated@example.com",
        "phone": "+201234567899",
        "password": "NewSecurePassword123!",
        "role": 4,
        "isActive": true
      },
      "expectedResponse": {
        "success": true,
        "data": "User updated successfully"
      }
    },
    "deleteUser": {
      "method": "DELETE",
      "url": "{{baseUrl}}?action=delete&id=1",
      "description": "Delete a user by ID",
      "body": null,
      "expectedResponse": {
        "success": true,
        "data": "User deleted successfully"
      }
    },
    "activateUser": {
      "method": "GET",
      "url": "{{baseUrl}}?action=activate&id=1",
      "description": "Activate a user by ID",
      "body": null,
      "expectedResponse": {
        "success": true,
        "data": "User activated successfully"
      }
    },
    "deactivateUser": {
      "method": "GET", 
      "url": "{{baseUrl}}?action=deactivate&id=1",
      "description": "Deactivate a user by ID",
      "body": null,
      "expectedResponse": {
        "success": true,
        "data": "User deactivated successfully"
      }
    }
  },
  "userRoles": {
    "0": "None",
    "1": "Admin", 
    "2": "Employee",
    "3": "Parent",
    "4": "Member"
  },
  "sampleUsers": {
    "admin": {
      "name": "System Administrator",
      "email": "admin@tarteel.com",
      "phone": "+201000000001",
      "password": "AdminPass123!",
      "role": 1,
      "isActive": true
    },
    "employee": {
      "name": "Employee User",
      "email": "employee@tarteel.com", 
      "phone": "+201000000002",
      "password": "EmployeePass123!",
      "role": 2,
      "isActive": true
    },
    "parent": {
      "name": "Parent User",
      "email": "parent@tarteel.com",
      "phone": "+201000000003", 
      "password": "ParentPass123!",
      "role": 3,
      "isActive": true
    },
    "member": {
      "name": "Member User",
      "email": "member@tarteel.com",
      "phone": "+201000000004",
      "password": "MemberPass123!",
      "role": 4,
      "isActive": true
    }
  },
  "invalidTestCases": {
    "createUserWithoutEmail": {
      "method": "POST",
      "url": "{{baseUrl}}?action=create",
      "description": "Try to create user without email (should fail)",
      "body": {
        "name": "Test User",
        "phone": "+201234567890",
        "password": "TestPassword123!",
        "role": 4,
        "isActive": true
      },
      "expectedResponse": {
        "error": "Email is required"
      }
    },
    "createUserWithoutPassword": {
      "method": "POST",
      "url": "{{baseUrl}}?action=create", 
      "description": "Try to create user without password (should fail)",
      "body": {
        "name": "Test User",
        "email": "test@example.com",
        "phone": "+201234567890",
        "role": 4,
        "isActive": true
      },
      "expectedResponse": {
        "error": "Password is required"
      }
    },
    "invalidAction": {
      "method": "POST",
      "url": "{{baseUrl}}?action=invalid",
      "description": "Try with invalid action (should return 405)",
      "body": {
        "name": "Test User",
        "email": "test@example.com",
        "password": "TestPassword123!",
        "role": 4,
        "isActive": true
      },
      "expectedResponse": {
        "error": "Method not allowed or invalid action"
      }
    }
  },
  "usageInstructions": {
    "1": "Replace 'YOUR_TOKEN_HERE' in headers with a valid authentication token",
    "2": "Update the baseUrl if your server runs on a different port",
    "3": "Use the sampleUsers section for quick testing with predefined user data",
    "4": "Test invalid cases to ensure proper error handling",
    "5": "Make sure to test with different user roles to verify role-based logic"
  }
}
